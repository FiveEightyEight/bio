---
import "@fontsource/geist-sans";
import { Icon } from "astro-icon/components";
import Nav from "../components/Nav.astro";
import ProjectItem from "../components/ProjectItem.astro";
import WorkExp from "../components/WorkExp.astro";
import Footer from "../components/Footer.astro";
import SEO from "../components/SEO.astro";
import Skill from "../components/Skill.astro";
import SocialLink from "../components/SocialLink.astro";
import { projects, skills } from "../data";
---

<html lang="en">
	<!--
		 ___       __    _______    ___        ________   ________   _____ ______    _______      
		 |\  \     |\  \ |\  ___ \  |\  \      |\   ____\ |\   __  \ |\   _ \  _   \ |\  ___ \     
		 \ \  \    \ \  \\ \   __/| \ \  \     \ \  \___| \ \  \|\  \\ \  \\\__\ \  \\ \   __/|    
		  \ \  \  __\ \  \\ \  \_|/__\ \  \     \ \  \     \ \  \\\  \\ \  \\|__| \  \\ \  \_|/__  
		   \ \  \|\__\_\  \\ \  \_|\ \\ \  \____ \ \  \____ \ \  \\\  \\ \  \    \ \  \\ \  \_|\ \ 
		    \ \____________\\ \_______\\ \_______\\ \_______\\ \_______\\ \__\    \ \__\\ \_______\
		     \|____________| \|_______| \|_______| \|_______| \|_______| \|__|     \|__| \|_______|

			ðŸš§ Site Under Construction ðŸš§

		Thanks for checking out the source code! I am still putting together the idea for what I want this to be; stay tuned...
	-->

	<head>
		<meta charset="UTF-8" />
		<SEO />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<link
			rel="icon"
			type="image/svg+xml"
			href="R_NBG_WHITE.svg"
			media="(prefers-color-scheme: dark)"
		/>
		<link
			rel="icon"
			type="image/svg+xml"
			href="R_NBG_BLACK.svg"
			media="(prefers-color-scheme: light)"
		/>
		<style>
			.icon-container {
				display: inline-block;
				transition: transform 0.5s ease;
			}
			h1 {
				clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%);
			}
			h2 {
				clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%);
			}
			.rabreu {
				transform: translateY(115px);
				transition: transform 0.5s;
			}
		</style>
	</head>
	<body class="bg-gray-950 max-w-screen-sm overflow-x-hidden">
		<Nav />
		<main
			id="main"
			class="flex flex-col min-h-[100dvh] bg-gray-950 text-gray-50 -mt-5"
		>
			<header
				class="-mt-24 md:-mt-10 px-4 py-8 md:px-6 md:py-12 lg:px-8 lg:py-16 xl:px-10 xl:py-20 h-screen"
			>
				<div
					class="flex flex-col h-full my-auto mx-auto max-w-3xl space-y-2 justify-center items-center"
				>
					<h1
						class="flex flex-row text-4xl font-bold tracking-tighter sm:text-5xl md:text-6xl lg:text-7xl"
					>
						<div class="rabreu">R</div><div class="rabreu">
							o
						</div><div class="rabreu">b</div><div class="rabreu">
							e
						</div><div class="rabreu">r</div><div class="rabreu">
							t
						</div><div class="rabreu">&nbsp;</div><div
							class="rabreu"
						>
							A
						</div><div class="rabreu">b</div><div class="rabreu">
							r
						</div><div class="rabreu">e</div><div class="rabreu">
							u
						</div>
					</h1>
					<p
						id="subtitle"
						class="text-lg text-gray-400 md:text-xl lg:text-2xl"
					>
						Welcome
					</p>
					<div class="grid grid-cols-2 gap-2">
						<SocialLink
							href="https://github.com/FiveEightyEight"
							name="github"
							label="GitHub"
						/>
						<SocialLink
							href="https://www.linkedin.com/in/robert-abreu/"
							name="linkedin"
							label="LinkedIn"
						/>
					</div>
				</div>
				<div
					class="project-button-link grid grid-rows-2 justify-center justify-items-center -mt-40 md:-mt-20 lg:-mt-10"
				>
					<p class="text-md text-gray-50 mb-4 text-center">
						View Projects
					</p>
					<a
						class="grid place-items-center content-center w-10 h-10 rounded-full bg-gray-50 animate-bounce"
						href="#projects"
						aria-label="Click to navigate to projects"
					>
						<Icon
							class="h-6 w-6 min-w-4 text-indigo-600"
							name={"arrow-down"}
						/>
					</a>
				</div>
			</header>
			<div class="flex-1 px-4 md:px-6 lg:px-8 xl:px-10">
				<div
					class="mx-auto max-w-3xl space-y-12 py-12 md:space-y-16 md:py-16 lg:space-y-20 lg:py-20 xl:space-y-24 xl:py-24"
				>
					<section class="grid gap-6 md:gap-8 lg:gap-10 xl:gap-12">
						<div
							id="projects"
							class="flex flex-col justify-center h-full"
						>
							<h2
								class="flex flex-row text-2xl font-bold tracking-tighter md:text-3xl lg:text-4xl"
							>
								<div class="projects-header-char">P</div>
								<div class="projects-header-char">r</div><div
									class="projects-header-char"
								>
									o
								</div><div class="projects-header-char">
									j
								</div><div class="projects-header-char">
									e
								</div><div class="projects-header-char">c</div>
								<div class="projects-header-char">t</div>
								<div class="projects-header-char">s</div>
							</h2>
							<div
								class="grid max-w-2xl grid-cols-1 gap-x-8 gap-y-20 lg:mx-0 lg:max-w-none lg:grid-cols-3"
							>
								{
									projects &&
										projects.map((project) => (
											<ProjectItem {...project} />
										))
								}
							</div>

							<div
								class="project rounded-md bg-gray-100 p-4 mt-4"
							>
								<div class="flex">
									<div class="flex-shrink-0">
										<svg
											class="h-5 w-5 text-gray-400"
											viewBox="0 0 20 20"
											fill="currentColor"
											aria-hidden="true"
										>
											<path
												fill-rule="evenodd"
												d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a.75.75 0 000 1.5h.253a.25.25 0 01.244.304l-.459 2.066A1.75 1.75 0 0010.747 15H11a.75.75 0 000-1.5h-.253a.25.25 0 01-.244-.304l.459-2.066A1.75 1.75 0 009.253 9H9z"
												clip-rule="evenodd"></path>
										</svg>
									</div>
									<div
										class="ml-3 flex-1 md:flex md:justify-between"
									>
										<p class="text-sm text-gray-900">
											Browse Public Projects in
											Development
										</p>
										<p class="mt-3 text-sm md:ml-6 md:mt-0">
											<a
												target="_blank"
												aria-label="Link to Robert's GitHub repositories"
												href="https://github.com/FiveEightyEight?tab=repositories"
												class="whitespace-nowrap font-medium text-blue-600 hover:text-blue-500"
											>
												Go
												<span aria-hidden="true">
													&rarr;</span
												>
											</a>
										</p>
									</div>
								</div>
							</div>
						</div>

						<div
							id="work-experience"
							class="flex flex-col justify-center h-full md:h-screen mb-3 md:mb-0 space-y-2"
						>
							<h2
								class="flex flex-row text-2xl font-bold tracking-tighter md:text-3xl lg:text-4xl"
							>
								<div class="xp-left">W</div><div
									class="xp-left"
								>
									o
								</div><div class="xp-left">r</div><div
									class="xp-left"
								>
									k
								</div>&nbsp;<div class="xp-left">E</div><div
									class="xp-center"
								>
									xp
								</div><div class="xp-right">e</div><div
									class="xp-right"
								>
									r
								</div><div class="xp-right">i</div><div
									class="xp-right"
								>
									e
								</div><div class="xp-right">n</div><div
									class="xp-right"
								>
									c
								</div><div class="xp-right">e</div>
							</h2>
							<WorkExp />
						</div>

						<div
							id="skills"
							class="flex flex-col justify-center h-screen md:h-screen mb-3 md:mb-0 space-y-2"
						>
							<h2
								class="flex flex-row text-2xl font-bold tracking-tighter md:text-3xl lg:text-4xl"
							>
								<div class="skills-header-char">S</div>
								<div class="skills-header-char">k</div><div
									class="skills-header-char"
								>
									i
								</div><div class="skills-header-char">
									l
								</div><div class="skills-header-char">
									l
								</div><div class="skills-header-char">s</div>
							</h2>
							<ul
								class="grid grid-cols-2 md:grid-cols-4 gap-2 md:gap-4 lg:gap-8"
							>
								{
									skills &&
										skills.map(({ label, icon }) => (
											<Skill label={label} icon={icon} />
										))
								}
							</ul>
						</div>
						<!-- <div class="space-y-2">
							<h2
								class="text-2xl font-bold tracking-tighter md:text-3xl lg:text-4xl"
							>
								Education
							</h2>
							<div class="space-y-4">
								<div class="grid gap-2 md:gap-3 lg:gap-4">
									<div
										class="flex items-center justify-between"
									>
										<h3
											class="text-lg font-semibold md:text-xl lg:text-2xl"
										>
											Bachelor's in Computer Information
											Systems
										</h3>
										<p
											class="text-sm text-gray-400 md:text-base lg:text-lg"
										>
											2006 - 2010
										</p>
									</div>
									<p
										class="text-sm text-gray-400 md:text-base lg:text-lg"
									>
										DeVry University
									</p>
								</div>
							</div>
						</div> -->
						<div
							id="connect"
							class="flex flex-col justify-center h-full md:h-screen mb-3 md:mb-0 space-y-2"
						>
							<h2
								class="flex flex-row text-2xl font-bold tracking-tighter md:text-3xl lg:text-4xl"
							>
								<div class="connect-char">C</div>
								<div class="connect-char">o</div>
								<div class="connect-char">n</div>
								<div class="connect-char">n</div>
								<div class="connect-char">e</div>
								<div class="connect-char">c</div>
								<div class="connect-char">t</div>
							</h2>
							<div class="space-y-4">
								<form
									action="https://formspree.io/f/xjvndyrr"
									method="POST"
									class="lg:flex-auto"
									onsubmit="this.submit(); this.reset(); return false;"
								>
									<div
										class="grid grid-cols-1 gap-x-8 gap-y-6 sm:grid-cols-2"
									>
										<div class="connect-field col-span-2">
											<label
												for="contact-name"
												class="block text-sm font-semibold leading-6 text-gray-50"
												>Name</label
											>
											<div class="mt-2.5">
												<input
													type="text"
													name="contact-name"
													id="contact-name"
													autocomplete="given-name"
													class="block w-full rounded-md border-0 px-3.5 py-2 text-gray-950 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6"
												/>
											</div>
										</div>
										<div class="connect-field col-span-2">
											<label
												for="email"
												class="block text-sm font-semibold leading-6 text-gray-50"
												>Email - (Required)</label
											>
											<div class="mt-2.5">
												<input
													type="email"
													name="email"
													id="email"
													autocomplete="family-name"
													class="block w-full rounded-md border-0 px-3.5 py-2 text-gray-950 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6"
													required
												/>
											</div>
										</div>
										<div
											class="connect-field sm:col-span-2"
										>
											<label
												for="message"
												class="block text-sm font-semibold leading-6 text-gray-50"
												>Message - (Required)</label
											>
											<div class="mt-2.5">
												<textarea
													id="message"
													name="message"
													rows="4"
													class="block w-full rounded-md border-0 px-3.5 py-2 text-gray-950 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6"
													required></textarea>
											</div>
										</div>
									</div>
									<div class="connect-field mt-10">
										<button
											type="submit"
											class="block w-full rounded-md bg-indigo-600 px-3.5 py-2.5 text-center text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600"
											>Let&apos;s talk</button
										>
									</div>
								</form>
							</div>
						</div>
					</section>
				</div>
			</div>
			<Footer is:inline />
		</main>
		<script
			src="https://cdn.jsdelivr.net/npm/gsap@3.12.5/dist/TextPlugin.min.js"
			is:inline></script>
		<script
			src="https://cdn.jsdelivr.net/npm/gsap@3.12.5/dist/ScrollTrigger.min.js"
			is:inline></script>
		<script
			src="https://cdn.jsdelivr.net/npm/gsap@3.12.5/dist/ScrollToPlugin.min.js"
			is:inline></script>
		<script type="module" is:inline>
			import gsap from "https://cdn.skypack.dev/gsap";
			document.addEventListener("DOMContentLoaded", function () {
				const nameElement = document.getElementById("subtitle");
				gsap.registerPlugin(TextPlugin);
				const gsapTL = gsap.timeline();
				gsapTL.set(nameElement, { y: -100, scale: 2.5 });
				gsapTL.from(nameElement, {
					duration: 0.3,
					opacity: 0,
					delay: 0.4,
					ease: "power3.out",
				});
				gsapTL.to(nameElement, {
					duration: 1.8,
					delay: 0.5,
					scale: 1,
					y: 0,
					ease: "power3.out",
				});
				gsapTL.to(
					".rabreu",
					{
						y: 0,
						stagger: 0.09,
						delay: 0.2,
						duration: 0.1,
						ease: "power3.out",
					},
					"<",
				);
				gsapTL.to(
					nameElement,
					{
						duration: 1.5,
						text: "Software Engineer",
						ease: "steps(17)",
					},
					"<",
				);
				gsapTL.from(".nav-link", {
					stagger: 0.15,
					duration: 1.8,
					delay: 0.2,
					opacity: 0,
				});
				gsapTL.from(
					".social-links",
					{
						stagger: 0.15,
						duration: 1.8,
						delay: 0.2,
						opacity: 0,
					},
					"<",
				);
				gsapTL.from(
					".project-button-link",
					{
						duration: 1.8,
						opacity: 0,
						delay: 0.7,
						ease: "power3.out",
					},
					"<",
				);
				gsap.registerPlugin(ScrollTrigger);
				const workXpTL = gsap.timeline({
					scrollTrigger: {
						trigger: ".xp-right",
						start: "top 80%",
						end: "bottom 20%",
						toggleActions: "play none none none",
					},
				});
				workXpTL.from(".xp-right", {
					y: 50,
					stagger: 0.09,
					delay: 0.3,
					duration: 0.5,
					ease: "power3.out",
					reversed: true,
				});
				workXpTL.from(
					".xp-left",
					{
						y: 50,
						stagger: 0.09,
						delay: 0.2,
						duration: 0.5,
						ease: "power3.out",
					},
					"<",
				);
				workXpTL.from(
					"#work-experience-content",
					{
						duration: 1.8,
						opacity: 0,
					},
					"<",
				);

				const projectsTL = gsap.timeline({
					scrollTrigger: {
						trigger: "#projects",
						start: "top 80%",
						end: "bottom 20%",
						toggleActions: "play none none none",
					},
				});
				projectsTL.from(".projects-header-char", {
					y: 50,
					stagger: 0.04,
					delay: 0.3,
					duration: 0.5,
					ease: "power3.out",
				});
				projectsTL.to(".project-button-link", {
					opacity: 0,
					duration: 0.5,
					ease: "power3.out",
				});
				gsap.utils.toArray(".project").forEach((project) => {
					const randomDuration = gsap.utils.random(0.5, 5, 1.5);
					projectsTL.add(
						gsap.from(project, {
							duration: randomDuration,
							opacity: 0,
							ease: "power3.out",
						}),
						"<",
					);
				});

				const skillsTL = gsap.timeline({
					defaults: { duration: 100, ease: "none" },
					scrollTrigger: {
						trigger: "#skills",
						start: "top 80%",
						end: "bottom 20%",
					},
				});
				skillsTL.from(".skills-header-char", {
					y: 50,
					stagger: 0.09,
					delay: 0.3,
					duration: 0.5,
					ease: "power3.out",
				});
				const startPositions = {
					0: { y: 65 },
					1: { y: 75 },
					2: { y: 75 },
					3: { y: 65 },
					4: { y: 65 },
					5: { y: 90 },
					6: { y: 90 },
					7: { y: 65 },
					8: { y: 65 },
					9: { y: 75 },
					10: { y: 75 },
				};
				const endPositions = {
					0: { y: -10, duration: 100 },
					1: { y: -60, duration: 100 },
					2: { y: -60, duration: 100 },
					3: { y: -10, duration: 100 },
					4: { y: -10, duration: 100 },
					5: { y: -70, duration: 100 },
					6: { y: -70, duration: 100 },
					7: { y: -10, duration: 100 },
					8: { y: -10, duration: 100 },
					9: { y: -80, duration: 100 },
					10: { y: -80, duration: 100 },
				};
				const adjustPositions = window.innerWidth >= 770;
				gsap.utils.toArray(".skill").forEach((skill, i) => {
					const randomDuration = gsap.utils.random(0.5, 5, 1.5);
					skillsTL.add(
						gsap.from(skill, {
							duration: randomDuration,
							delay: 0.02,
							opacity: 0,
							ease: "power3.out",
						}),
						"<",
					);
					if (adjustPositions) {
						gsap.set(skill, { ...startPositions[i] }, "<");
					}
				});
				const skillTL = gsap.timeline({
					defaults: { duration: 100, ease: "none" },
					scrollTrigger: {
						trigger: "#skills",
						scrub: true,
						start: "top 40%",
						end: "400px",
					},
				});
				if (adjustPositions) {
					gsap.utils.toArray(".skill").forEach((skill, i) => {
						skillTL.to(
							skill,
							{ ...endPositions[i], ease: "power1.out" },
							"<",
						);
					});
				}
				const connectTL = gsap.timeline({
					scrollTrigger: {
						trigger: "#connect",
						start: "top 80%",
						end: "bottom 20%",
						toggleActions: "play none none none",
					},
				});
				connectTL.from(".connect-char", {
					y: 50,
					stagger: 0.09,
					delay: 0.3,
					duration: 0.5,
					ease: "power3.out",
				});
				connectTL.from(
					".connect-field",
					{
						y: 50,
						opacity: 0,
						stagger: 0.09,
						delay: 0.5,
						duration: 1.5,
						ease: "power3.out",
					},
					"<",
				);
				gsap.registerPlugin(ScrollToPlugin);
				function getSamePageAnchor(link) {
					if (
						link.protocol !== window.location.protocol ||
						link.host !== window.location.host ||
						link.pathname !== window.location.pathname ||
						link.search !== window.location.search
					) {
						return false;
					}

					return link.hash;
				}

				// Scroll to a given hash, preventing the event given if there is one
				function scrollToHash(hash, e) {
					const elem = hash ? document.querySelector(hash) : false;
					if (elem) {
						if (e) e.preventDefault();
						const nav = document.querySelector("nav");
						gsap.to(window, {
							scrollTo: {
								y: elem,
								x: 0,
								offsetY: nav.offsetHeight,
							},
						});
					}
				}
				document.querySelectorAll("a[href]").forEach((link) => {
					link.addEventListener("click", function (e) {
						scrollToHash(getSamePageAnchor(link), e);
					});
				});
				let timeoutId;
				document.addEventListener("scroll", () => {
					clearTimeout(timeoutId);
					// debounce with setTimeout
					timeoutId = setTimeout(() => {
						const header = document.querySelector("header");
						const mainNav = document.getElementById("main-nav");
						const headerRect = header.getBoundingClientRect();
						const opacity = window
							.getComputedStyle(mainNav)
							.getPropertyValue("opacity");
						if (headerRect.bottom < 100 && opacity !== "1") {
							gsap.timeline()
								.to(mainNav, {
									duration: 1,
									opacity: 1,
								})
								.set(mainNav, { opacity: 1 });
						} else if (headerRect.bottom > 100 && opacity !== "0") {
							gsap.timeline()
								.to(mainNav, {
									duration: 1,
									opacity: 0,
								})
								.set(mainNav, { opacity: 0 });
						}
					}, 100);
				});
				const mobileButton = document.getElementById("menu-button");
				let menuOpen = false;
				const mobileMenu = document.getElementById("mobile-menu");
				const toggleMobileMenu = (event) => {
					if (!menuOpen) {
						mobileMenu.style.display = "block";
						gsap.fromTo(
							mobileMenu,
							{ x: "100%" },
							{ x: "0%", duration: 0.5 },
						);
						menuOpen = true;
					} else {
						gsap.to(mobileMenu, {
							x: "100%",
							duration: 0.5,
							onComplete: () => {
								mobileMenu.style.display = "none";
							},
						});
						menuOpen = false;
					}
				};
				// mobileButton.addEventListener("touchstart", toggleMobileMenu);
				mobileButton.addEventListener("mousedown", toggleMobileMenu);
			});
		</script>
	</body><!-- 
			 _______  _                _______  _         _                   _______  _         _           
			(_______)(_)              (_______)(_)       | |      _          (_______)(_)       | |      _   
			 _____    _  _   _  _____  _____    _   ____ | |__  _| |_  _   _  _____    _   ____ | |__  _| |_ 
			|  ___)  | || | | || ___ ||  ___)  | | / _  ||  _ \(_   _)| | | ||  ___)  | | / _  ||  _ \(_   _)
			| |      | | \ V / | ____|| |_____ | |( (_| || | | | | |_ | |_| || |_____ | |( (_| || | | | | |_ 
			|_|      |_|  \_/  |_____)|_______)|_| \___ ||_| |_|  \__) \__  ||_______)|_| \___ ||_| |_|  \__)
			                                      (_____|             (____/             (_____|             
	 -->
</html>
